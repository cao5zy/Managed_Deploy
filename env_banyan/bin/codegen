#!/home/caozon/banyan/env_banyan/bin/python
usage=\
'''
# to debug, set the _DEBUG environment variable
export _DEBUG="debug"

# generate the code in current directory, 
codegen <url>

# generate the code in the specified directory
codegen <url> -o "./code/to/output"

# generate the code with username and password
codegen <url> -u <username> -p <password>

'''
from optparse import OptionParser
from md_codegen import run
from codegenhelper import debug
import sys

parser = OptionParser()
parser.add_option("-o", "--output", dest="output", default="./")
parser.add_option("-u", "--username", dest="username", default=None)
parser.add_option("-p", "--password", dest="password", default=None)
parser.add_option("-e", "--project", dest="project", default=None)
parser.add_option("", "--template-repo", dest="template_repo")
parser.add_option("", "--template-tag", dest="template_tag")
parser.add_option("", "--jsonstr", dest="jsonstr", default=None)
parser.add_option("", "--datafile", dest="datafile", default=None)
parser.add_option("", "--template-path", dest="template_path", default=None)


(lambda ret: \
 (lambda options, args: \
  run(options.output, args[1] if len(args) > 1 else "", options.project, options.template_repo, options.template_tag, options.username, options.password, options.jsonstr, options.datafile, options.template_path, True)) \
 (ret[0], ret[1])) \
 (parser.parse_args(sys.argv))


